 <?xml version='1.0' encoding='utf-8'?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<rfc
     xmlns:xi="http://www.w3.org/2001/XInclude"
     category="std"
     docName="draft-addogra-vrrp-5798bis-00.xml"
     ipr="trust200902"
     obsoletes=""
     updates="5798"
     submissionType="IETF"
     xml:lang="en"
     tocInclude="true"
     tocDepth="4"
     symRefs="true"
     sortRefs="true"
     consensus="true"
     version="3">
	<!-- xml2rfc v2v3 conversion 2.38.1 -->
	<!-- category values: std, bcp, info, exp, and historic
	     ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
	     or pre5378Trust200902
	     you can add the attributes updates="NNNN" and obsoletes="NNNN"
	     they will automatically be output with "(if approved)" -->
	
	<!-- ***** FRONT MATTER ***** --> 

	<front>
		<!-- The abbreviated title is used in the page header - it is only necessary if the
		     full title is longer than 39 characters -->
		
		
		<title abbrev="VRRP Terminology">Update to VRRP Terminology</title>
		<seriesInfo name="Internet-Draft" value="draft-addogra-vrrp-5798bis-00.xml"/>

		<!-- Another author who claims to be an editor -->
		
		<author initials="A" surname="Lindem" fullname="Acee Lindem">
			<organization>Cisco Systems</organization>
			<address>
				<postal>
					<street>301 Midenhall Way</street>
					<city>Cary</city>
					<region>NC</region>
					<code>27513</code>
					<country>USA</country>
				</postal>
				<email>acee@cisco.com</email>
			</address>
		</author>
		<author initials="A" surname="Dogra" fullname="Aditya Dogra">
			<organization>Cisco Systems</organization>
			<address>
				<postal>
					<street>Sarjapur Outer Ring Road</street>
					<city>Bangalore</city>
					<code>560103</code>
					<country>India</country>
				</postal>
				<email>addogra@cisco.com</email>
			</address>
		</author>
		<author initials="S." surname="Nadas" fullname="Stephen Nadas">
			<organization>Computer Science, Boston University</organization>
			<address>
				<postal>
					<street>111 Cummington Mall</street>
					<city>Boston</city>
					<region>MA</region>
					<code>02215</code>
					<country>USA</country>
				</postal>
				<email>nadas@bu.edu</email>
			</address>
		</author>
		<date month="March" year="2022" />
		<area>General</area>
		<keyword>RFC</keyword>
		<keyword>VRRP</keyword>
		<abstract>
			<t>
				This document updates VRRP terminology to be in line with inclusive language used in the industry.
This document updates VRRP Version 3 <xref target="RFC5798"/>. This draft replaces all  instances of the term "Master" by "Active". 
				This memo defines the Virtual Router Redundancy Protocol (VRRP) for
   IPv4 and IPv6.  It is version three (3) of the protocol, and it is
   based on VRRP (version 2) for IPv4 that is defined in RFC 3768 and in
   "Virtual Router Redundancy Protocol for IPv6".  VRRP specifies an
   election protocol that dynamically assigns responsibility for a
   virtual router to one of the VRRP routers on a LAN.  The VRRP router
   controlling the IPv4 or IPv6 address(es) associated with a virtual
   router is called the Active, and it forwards packets sent to these
   IPv4 or IPv6 addresses.  VRRP Active routers are configured with
   virtual IPv4 or IPv6 addresses, and VRRP Backup routers infer the
   address family of the virtual addresses being carried based on the
   transport protocol.  Within a VRRP router, the virtual routers in
   each of the IPv4 and IPv6 address families are a domain unto
   themselves and do not overlap.  The election process provides dynamic
   failover in the forwarding responsibility should the Active become
   unavailable.  For IPv4, the advantage gained from using VRRP is a
   higher-availability default path without requiring configuration of
   dynamic routing or router discovery protocols on every end-host.  For
   IPv6, the advantage gained from using VRRP for IPv6 is a quicker
   switchover to Backup routers than can be obtained with standard IPv6
   Neighbor Discovery mechanisms.
			</t>
		</abstract>
	</front>
	<middle>
		<section anchor="sect-1">
			<name>Introduction</name>
			<t> This memo defines the Virtual Router Redundancy Protocol (VRRP) for
   IPv4 and IPv6 with inclusive language. This draft replaces all instances of the term "Master" by "Active" as defined in VRRP Version 3 <xref target="RFC5798"/>.  
It is version three (3) of the protocol.  It is based on VRRP (version 2) for IPv4 that is defined in <xref target="RFC3768"/> and in
				<xref target="VRRP-IPv6"/>.  VRRP specifies an election protocol that dynamically
   assigns responsibility for a virtual router to one of the VRRP
   routers on a LAN.  The VRRP router controlling the IPv4 or IPv6
   address(es) associated with a virtual router is called the Active,
   and it forwards packets sent to these IPv4 or IPv6 addresses.  VRRP
   Active routers are configured with virtual IPv4 or IPv6 addresses,
   and VRRP Backup routers infer the address family of the virtual
   addresses being carried based on the transport protocol.  Within a
   VRRP router, the virtual routers in each of the IPv4 and IPv6 address
   families are a domain unto themselves and do not overlap.  The
   election process provides dynamic failover in the forwarding
   responsibility should the Active become unavailable.</t>
			<t>
				VRRP provides a function similar to the proprietary protocols "Hot Standby Router Protocol (HSRP)" <xref target="RFC2281"/> and "IP Standby Protocol"
   [IPSTB].</t>
			<section anchor="sect-1.1">
				<name>A Note on Terminology</name>
				<t>
					This document discusses both IPv4 and IPv6 operation, and with
   respect to the VRRP protocol, many of the descriptions and procedures
   are common.  In this document, it would be less verbose to be able to
   refer to "IP" to mean either "IPv4 or IPv6".  However, historically,
   the term "IP" usually refers to IPv4.  For this reason, in this
   specification, the term "IPvX" (where X is 4 or 6) is introduced to
   mean either "IPv4" or "IPv6".  In this text, where the IP version
   matters, the appropriate term is used and the use of the term "IP" is
   avoided.</t>
			</section>
			<section anchor="sect-1.2">
				<name>IPv4</name>
				<t>
					There are a number of methods that an IPv4 end-host can use to
   determine its first-hop router towards a particular IPv4 destination.
   These include running (or snooping) a dynamic routing protocol such
   as Routing Information Protocol <xref target="RFC2453"/> or OSPF version 2
					<xref target="RFC2328"/>, running an ICMP router discovery client <xref target="RFC1256"/>, or
   using a statically configured default route.</t>
				<t>
					Running a dynamic routing protocol on every end-host may be
   infeasible for a number of reasons, including administrative
   overhead, processing overhead, security issues, or lack of a protocol
   implementation for some platforms.  Neighbor or router discovery
   protocols may require active participation by all hosts on a network,
   leading to large timer values to reduce protocol overhead in the face
   of large numbers of hosts.  This can result in a significant delay in
   the detection of a lost (i.e., dead) neighbor; such a delay may
   introduce unacceptably long "black hole" periods.</t>
				<t>
					The use of a statically configured default route is quite popular; it
   minimizes configuration and processing overhead on the end-host and
   is supported by virtually every IPv4 implementation.  This mode of
   operation is likely to persist as dynamic host configuration
   protocols <xref target="RFC2131"/> are deployed, which typically provide
   configuration for an end-host IPv4 address and default gateway.
   However, this creates a single point of failure.  Loss of the default
   router results in a catastrophic event, isolating all end-hosts that
   are unable to detect any alternate path that may be available.</t>
				<t>
					The Virtual Router Redundancy Protocol (VRRP) is designed to
   eliminate the single point of failure inherent in the static default-
   routed environment.  VRRP specifies an election protocol that
   dynamically assigns responsibility for a virtual router to one of the
   VRRP routers on a LAN.  The VRRP router controlling the IPv4
   address(es) associated with a virtual router is called the Active and
   forwards packets sent to these IPv4 addresses.  The election process
   provides dynamic failover in the forwarding responsibility should the
   Active become unavailable.  Any of the virtual router's IPv4
   addresses on a LAN can then be used as the default first hop</t>
				<t>
					router by end-hosts.  The advantage gained from using VRRP is a
   higher availability default path without requiring configuration of
   dynamic routing or router discovery protocols on every end-host.</t>
			</section>
			<section anchor="sect-1.3">
				<name>IPv6</name>
				<t>
					IPv6 hosts on a LAN will usually learn about one or more default
   routers by receiving Router Advertisements sent using the IPv6
   Neighbor Discovery (ND) protocol <xref target="RFC4861"/>.  The Router
   Advertisements are multicast periodically at a rate that the hosts
   will learn about the default routers in a few minutes.  They are not
   sent frequently enough to rely on the absence of the Router
   Advertisement to detect router failures.</t>
				<t>
					Neighbor Discovery (ND) includes a mechanism called Neighbor
   Unreachability Detection to detect the failure of a neighbor node
   (router or host) or the forwarding path to a neighbor.  This is done
   by sending unicast ND Neighbor Solicitation messages to the neighbor
   node.  To reduce the overhead of sending Neighbor Solicitations, they
   are only sent to neighbors to which the node is actively sending
   traffic and only after there has been no positive indication that the
   router is up for a period of time.  Using the default parameters in
   ND, it will take a host about 38 seconds to learn that a router is
   unreachable before it will switch to another default router.  This
   delay would be very noticeable to users and cause some transport
   protocol implementations to time out.</t>
				<t>
					While the ND unreachability detection could be made quicker by
   changing the parameters to be more aggressive (note that the current
   lower limit for this is 5 seconds), this would have the downside of
   significantly increasing the overhead of ND traffic, especially when
   there are many hosts all trying to determine the reachability of one
   of more routers.</t>
				<t>
					The Virtual Router Redundancy Protocol for IPv6 provides a much
   faster switchover to an alternate default router than can be obtained
   using standard ND procedures.  Using VRRP, a Backup router can take
   over for a failed default router in around three seconds (using VRRP
   default parameters).  This is done without any interaction with the
   hosts and a minimum amount of VRRP traffic.</t>
			</section>
			<section anchor="sect-1.4">
				<name>Requirements Language</name>
				<t>
					The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in <xref target="RFC2119"/>.</t>
			</section>
			<section anchor="sect-1.5">
				<name>Scope</name>
				<t>
					The remainder of this document describes the features, design goals,
   and theory of operation of VRRP.  The message formats, protocol
   processing rules, and state machine that guarantee convergence to a
   single Virtual Router Active are presented.  Finally, operational
   issues related to MAC address mapping, handling of ARP requests,
   generation of ICMP redirect messages, and security issues are
   addressed.</t>
			</section>
			<section anchor="sect-1.6">
				<name>Definitions</name>
				<dl newline="false" spacing="normal" indent="24">
					<dt>VRRP Router</dt>
					<dd>
						<t>
							A router running the Virtual Router
						</t>
						<t>
							Redundancy Protocol.  It may participate as
                           one or more virtual routers.
						</t>
					</dd>
					<dt>Virtual Router</dt>
					<dd>
						<t>
							An abstract object managed by VRRP that acts
						</t>
						<t>
							as a default router for hosts on a shared
                           LAN.  It consists of a Virtual Router
                           Identifier and either a set of associated
                           IPv4 addresses or a set of associated IPv6
                           addresses across a common LAN.  A VRRP Router
                           may back up one or more virtual routers.
						</t>
					</dd>
					<dt>IP Address Owner</dt>
					<dd>
						<t>
							The VRRP router that has the virtual router's
						</t>
						<t>
							IPvX address(es) as real interface
                           address(es).  This is the router that, when
                           up, will respond to packets addressed to one
                           of these IPvX addresses for ICMP pings, TCP
                           connections, etc.
						</t>
					</dd>
					<dt>Active IP Address</dt>
					<dd>
						<t>
							In IPv4, an IPv4 address selected from the
						</t>
						<t>
							set of real interface addresses.  One
                           possible selection algorithm is to always
                           select the first address.  In IPv4 mode, VRRP
                           advertisements are always sent using the
                           Active IPv4 address as the source of the
                           IPv4 packet.  In IPv6, the link-local address
                           of the interface over which the packet is
                           transmitted is used.
						</t>
					</dd>
					<dt>Virtual Router Active</dt>
					<dd>
						<t>
							The VRRP router that is assuming the
						</t>
						<t>
							responsibility of forwarding packets sent to
                           the IPvX address(es) associated with the
                           virtual router, answering ARP requests
						</t>
						<t>
							for the IPv4 address(es), and answering ND
                           requests for the IPv6 address(es).  Note that
                           if the IPvX address owner is available, then
                           it will always become the Active.
						</t>
					</dd>
					<dt>Virtual Router Backup</dt>
					<dd>
						<t>
							The set of VRRP routers available to assume
						</t>
						<t>
							forwarding responsibility for a virtual
                           router should the current Active fail.
						</t>
					</dd>
				</dl>
			</section>
		</section>
		<section anchor="sect-2">
			<name>Required Features</name>
			<t>
				This section outlines the set of features that were considered
   mandatory and that guided the design of VRRP.</t>
			<section anchor="sect-2.1">
				<name>IPvX Address Backup</name>
				<t>
					Backup of an IPvX address or addresses is the Active function of
   VRRP.  While providing election of a Virtual Router Active and the
   additional functionality described below, the protocol should
   strive to:</t>
				<ul spacing="normal">
					<li>Minimize the duration of black holes.</li>
					<li>Minimize the steady-state bandwidth overhead and processing
      complexity.</li>
					<li>Function over a wide variety of multiaccess LAN technologies
      capable of supporting IPvX traffic.</li>
					<li>Allow multiple virtual routers on a network for load balancing.</li>
					<li>Support multiple logical IPvX subnets on a single LAN segment.</li>
				</ul>
			</section>
			<section anchor="sect-2.2">
				<name>Preferred Path Indication</name>
				<t>
					A simple model of Active election among a set of redundant routers is
   to treat each router with equal preference and claim victory after
   converging to any router as Active.  However, there are likely to be
   many environments where there is a distinct preference (or range of
   preferences) among the set of redundant routers.  For example, this
   preference may be based upon access link cost or speed, router
   performance or reliability, or other policy considerations.  The
   protocol should allow the expression of this relative path preference
   in an intuitive manner and guarantee Active convergence to the most
   preferential router currently available.</t>
			</section>
			<section anchor="sect-2.3">
				<name>Minimization of Unnecessary Service Disruptions</name>
				<t>
					Once Active election has been performed, any unnecessary transitions
   between Active and Backup routers can result in a disruption in
   service.  The protocol should ensure after Active election that no
   state transition is triggered by any Backup router of equal or lower
   preference as long as the Active continues to function properly.</t>
				<t>
					Some environments may find it beneficial to avoid the state
   transition triggered when a router that is preferred over the current
   Active becomes available.  It may be useful to support an override of
   the immediate convergence to the preferred path.</t>
			</section>
			<section anchor="sect-2.4">
				<name>Efficient Operation over Extended LANs</name>
				<t>
					Sending IPvX packets (that is, sending either IPv4 or IPv6) on a
   multiaccess LAN requires mapping from an IPvX address to a MAC
   address.  The use of the virtual router MAC address in an extended
   LAN employing learning bridges can have a significant effect on the
   bandwidth overhead of packets sent to the virtual router.  If the
   virtual router MAC address is never used as the source address in a
   link-level frame, then the station location is never learned,
   resulting in flooding of all packets sent to the virtual router.  To
   improve the efficiency in this environment, the protocol should:
   1) use the virtual router MAC address as the source in a packet sent
   by the Active to trigger station learning; 2) trigger a message
   immediately after transitioning to the Active to update the station
   learning; and 3) trigger periodic messages from the Active to
   maintain the station learning cache.</t>
			</section>
			<section anchor="sect-2.5">
				<name>Sub-Second Operation for IPv4 and IPv6</name>
				<t>
					Sub-second detection of Active VRRP router failure is needed in both
   IPv4 and IPv6 environments.  Earlier work proposed that sub-second
   operation was for IPv6; this specification leverages that earlier
   approach for IPv4 and IPv6.</t>
				<t>
					One possible problematic scenario when using small
   VRRP_Advertisement_Intervals may occur when a router is delivering
   more packets onto the LAN than can be accommodated, and so a queue
   builds up in the router.  It is possible that packets being
   transmitted onto the VRRP-protected LAN could see larger queueing
   delay than the smallest VRRP Advertisement_Interval.  In this case,
   the Active_Down_Interval will be small enough so that normal queuing
   delays might cause a VRRP Backup to conclude that the Active is down,
   and therefore promote itself to Active.  Very shortly afterwards, the
   delayed VRRP packets from the Active cause a switch back to Backup
   status.  Furthermore, this process can repeat many times per second,
   causing significant disruption to traffic.  To mitigate this problem,
   priority forwarding of VRRP packets should be considered.  It should
   be possible for a VRRP Active to observe that this situation is
   occurring frequently and at least log the problem.</t>
			</section>
		</section>
		<section anchor="sect-3">
			<name>VRRP Overview</name>
			<t>
				VRRP specifies an election protocol to provide the virtual router
   function described earlier.  All protocol messaging is performed
   using either IPv4 or IPv6 multicast datagrams; thus, the protocol can
   operate over a variety of multiaccess LAN technologies supporting
   IPvX multicast.  Each link of a VRRP virtual router has a single
   well-known MAC address allocated to it.  This document currently only
   details the mapping to networks using the IEEE 802 48-bit MAC
   address.  The virtual router MAC address is used as the source in all
   periodic VRRP messages sent by the Active router to enable bridge
   learning in an extended LAN.</t>
			<t>
				A virtual router is defined by its virtual router identifier (VRID)
   and a set of either IPv4 or IPv6 address(es).  A VRRP router may
   associate a virtual router with its real address on an interface.
   The scope of each virtual router is restricted to a single LAN.  A
   VRRP router may be configured with additional virtual router mappings
   and priority for virtual routers it is willing to back up.  The
   mapping between the VRID and its IPvX address(es) must be coordinated
   among all VRRP routers on a LAN.</t>
			<t>
				There is no restriction against reusing a VRID with a different
   address mapping on different LANs, nor is there a restriction against
   using the same VRID number for a set of IPv4 addresses and a set of
   IPv6 addresses; however, these are two different virtual routers.</t>
			<t>
				To minimize network traffic, only the Active for each virtual router
   sends periodic VRRP Advertisement messages.  A Backup router will not
   attempt to preempt the Active unless it has higher priority.  This
   eliminates service disruption unless a more preferred path becomes
   available.  It's also possible to administratively prohibit all
   preemption attempts.  The only exception is that a VRRP router will
   always become Active of any virtual router associated with addresses
   it owns.  If the Active becomes unavailable, then the highest-
   priority Backup will transition to Active after a short delay,
   providing a controlled transition of the virtual router
   responsibility with minimal service interruption.</t>
			<t>
				The VRRP protocol design provides rapid transition from Backup to
   Active to minimize service interruption and incorporates
   optimizations that reduce protocol complexity while guaranteeing
   controlled Active transition for typical operational scenarios.  The
   optimizations result in an election protocol with minimal runtime
   state requirements, minimal active protocol states, and a single
   message type and sender.  The typical operational scenarios are
   defined to be two redundant routers and/or distinct path preferences
   among each router.  A side effect when these assumptions are violated
   (i.e., more than two redundant paths, all with equal preference) is
   that duplicate packets may be forwarded for a brief period during
   Active election.  However, the typical scenario assumptions are
   likely to cover the vast majority of deployments, loss of the Active
   router is infrequent, and the expected duration in Active election
   convergence is quite small ( &lt;&lt; 1 second ).  Thus, the VRRP optimizations represent significant simplifications in the protocol design while incurring an insignificant probability of brief network degradation.</t>
		</section>
		<section anchor="sect-4">
			<name>Sample Configurations</name>
			<section anchor="sect-4.1">
				<name>Sample Configuration 1</name>
				<t>
					The following figure shows a simple network with two VRRP routers
   implementing one virtual router.</t>
				<artwork><![CDATA[
        +-----------+ +-----------+
        |   Rtr1    | |   Rtr2    |
        |(MR VRID=1)| |(BR VRID=1)|
        |           | |           |
VRID=1  +-----------+ +-----------+
IPvX A--------->*            *<---------IPvX B
                |            |
                |            |
----------------+------------+-----+----------+----------+----------+--
                                   ^          ^          ^          ^
                                   |          |          |          |
default rtr IPvX addrs-------> (IPvX A)   (IPvX A)   (IPvX A)   (IPvX A)
                                   |          |          |          |
                          IPvX H1->* IpvX H2->* IPvX H3->* IpvX H4->*
                                +--+--+    +--+--+    +--+--+    +--+--+
                                |  H1 |    |  H2 |    |  H3 |    |  H4 |
                                +-----+    +-----+    +--+--+    +--+--+
   Legend:
         --+---+---+-- = Ethernet, Token Ring, or FDDI
                     H = Host computer
                    MR = Active Router
                    BR = Backup Router
                    *  =  IPvX Address; X is 4 everywhere in IPv4 case
                                        X is 6 everywhere in IPv6 case
                    (IPvX) = default router for hosts
   Eliminating all mention of VRRP (VRID=1) from the figure above leaves
   it as a typical deployment.
]]></artwork>
				<t>
					In the IPv4 case (that is, IPvX is IPv4 everywhere in the figure),
   each router is permanently assigned an IPv4 address on the LAN
   interface (Rtr1 is assigned IPv4 A and Rtr2 is assigned IPv4 B), and
   each host installs a static default route through one of the routers
   (in this example they all use Rtr1's IPv4 A).</t>
				<t>
					In the IPv6 case (that is, IPvX is IPv6 everywhere in the figure),
   each router has a link-local IPv6 address on the LAN interface (Rtr1
   is assigned IPv6 Link-Local A and Rtr2 is assigned IPv6 Link-
   Local B), and each host learns a default route from Router
   Advertisements through one of the routers (in this example, they all
   use Rtr1's IPv6 Link-Local A).</t>
				<t>
					Moving to an IPv4 VRRP environment, each router has the exact same
   permanently assigned IPv4 address.  Rtr1 is said to be the IPv4
   address owner of IPv4 A, and Rtr2 is the IPv4 address owner of
   IPv4 B.  A virtual router is then defined by associating a unique
   identifier (the virtual router ID) with the address owned by a
   router.</t>
				<t>
					Moving to an IPv6 VRRP environment, each router has the exact same
   Link-Local IPv6 address.  Rtr1 is said to be the IPv6 address owner
   of IPv6 A, and Rtr2 is the IPv6 address owner of IPv6 B.  A virtual
   router is then defined by associating a unique identifier (the
   virtual router ID) with the address owned by a router.</t>
				<t>
					Finally, in both the IPv4 and IPv6 cases, the VRRP protocol manages
   virtual router failover to a Backup router.</t>
				<t>
					The IPv4 example above shows a virtual router configured to cover the
   IPv4 address owned by Rtr1 (VRID=1, IPv4_Address=A).  When VRRP is
   enabled on Rtr1 for VRID=1, it will assert itself as Active, with
   priority = 255, since it is the IP address owner for the virtual
   router IP address.  When VRRP is enabled on Rtr2 for VRID=1, it will
   transition to Backup, with priority = 100 (the default priority is
   100), since it is not the IPv4 address owner.  If Rtr1 should fail,
   then the VRRP protocol will transition Rtr2 to Active, temporarily
   taking over forwarding responsibility for IPv4 A to provide
   uninterrupted service to the hosts.  When Rtr1 returns to service, it
   will re-assert itself as Active.</t>
				<t>
					The IPv6 example above shows a virtual router configured to cover the
   IPv6 address owned by Rtr1 (VRID=1, IPv6_Address=A).  When VRRP is
   enabled on Rtr1 for VRID=1, it will assert itself as Active, with
   priority = 255, since it is the IPv6 address owner for the virtual
   router IPv6 address.  When VRRP is enabled on Rtr2 for VRID=1, it
   will transition to Backup, with priority = 100 (the default priority
   is 100), since it is not the IPv6 address owner.  If Rtr1 should
   fail, then the VRRP protocol will transition Rtr2 to Active,
   temporarily taking over forwarding responsibility for IPv6 A to
   provide uninterrupted service to the hosts.</t>
				<t>
					Note that in both cases, in this example IPvX B is not backed up; it
   is only used by Rtr2 as its interface address.  In order to back up
   IPvX B, a second virtual router must be configured.  This is shown in
   the next section.</t>
			</section>
			<section anchor="sect-4.2">
				<name>Sample Configuration 2</name>
				<t>
					The following figure shows a configuration with two virtual routers
   with the hosts splitting their traffic between them.</t>
				<artwork><![CDATA[
        +-----------+      +-----------+
        |   Rtr1    |      |   Rtr2    |
        |(MR VRID=1)|      |(BR VRID=1)|
        |(BR VRID=2)|      |(MR VRID=2)|
VRID=1  +-----------+      +-----------+  VRID=2
IPvX A -------->*            *<---------- IPvX B
                |            |
                |            |
----------------+------------+-----+----------+----------+----------+--
                                   ^          ^          ^          ^
                                   |          |          |          |
default rtr IPvX addrs -----> (IPvX A)   (IPvX A)   (IPvX B)   (IPvX B)
                                   |          |          |          |
                          IPvX H1->* IpvX H2->* IPvX H3->* IpvX H4->*
                                +--+--+    +--+--+    +--+--+    +--+--+
                                |  H1 |    |  H2 |    |  H3 |    |  H4 |
                                +-----+    +-----+    +--+--+    +--+--+
   Legend:
        ---+---+---+--  =  Ethernet, Token Ring, or FDDI
                     H  =  Host computer
                    MR  =  Active Router
                    BR  =  Backup Router
                     *  =  IPvX Address; X is 4 everywhere in IPv4 case
                                         X is 6 everywhere in IPv6 case
                (IPvX)  =  default router for hosts
]]></artwork>
				<t>
					In the IPv4 example above (that is, IPvX is IPv4 everywhere in the
   figure), half of the hosts have configured a static route through
   Rtr1's IPv4 A, and half are using Rtr2's IPv4 B.  The configuration
   of virtual router VRID=1 is exactly the same as in the first example
   (see <xref target="sect-4.1"/>), and a second virtual router has been added to
   cover the IPv4 address owned by Rtr2 (VRID=2, IPv4_Address=B).  In
   this case, Rtr2 will assert itself as Active for VRID=2 while Rtr1
   will act as a Backup.  This scenario demonstrates a deployment
   providing load splitting when both routers are available, while
   providing full redundancy for robustness.</t>
				<t>
					In the IPv6 example above (that is, IPvX is IPv6 everywhere in the
   figure), half of the hosts have learned a default route through
   Rtr1's IPv6 A, and half are using Rtr2's IPv6 B.  The configuration
   of virtual router VRID=1 is exactly the same as in the first example
   (see <xref target="sect-4.1"/>), and a second virtual router has been added to
   cover the IPv6 address owned by Rtr2 (VRID=2, IPv6_Address=B).  In
   this case, Rtr2 will assert itself as Active for VRID=2 while Rtr1
   will act as a Backup.  This scenario demonstrates a deployment
   providing load splitting when both routers are available, while
   providing full redundancy for robustness.</t>
				<t>
					Note that the details of load balancing are out of scope of this
   document.  However, in a case where the servers need different
   weights, it may not make sense to rely on router advertisements alone
   to balance the host load between the routers.</t>
			</section>
		</section>
		<section anchor="sect-5">
			<name>Protocol</name>
			<t>
				The purpose of the VRRP packet is to communicate to all VRRP routers
   the priority and the state of the Active router associated with the
   VRID.</t>
			<t>
				When VRRP is protecting an IPv4 address, VRRP packets are sent
   encapsulated in IPv4 packets.  They are sent to the IPv4 multicast
   address assigned to VRRP.</t>
			<t>
				When VRRP is protecting an IPv6 address, VRRP packets are sent
   encapsulated in IPv6 packets.  They are sent to the IPv6 multicast
   address assigned to VRRP.</t>
			<section anchor="sect-5.1">
				<name>VRRP Packet Format</name>
				<t>
					This section defines the format of the VRRP packet and the relevant
   fields in the IP header.</t>
				<artwork><![CDATA[
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                    IPv4 Fields or IPv6 Fields                 |
...                                                             ...
 |                                                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |Version| Type  | Virtual Rtr ID|   Priority    |Count IPvX Addr|
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |(rsvd) |     Max Adver Int     |          Checksum             |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                                                               |
 +                                                               +
 |                       IPvX Address(es)                        |
 +                                                               +
 +                                                               +
 +                                                               +
 +                                                               +
 |                                                               |
 +                                                               +
 |                                                               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
				<section anchor="sect-5.1.1">
					<name>IPv4 Field Descriptions</name>
					<section anchor="sect-5.1.1.1">
						<name>Source Address</name>
						<t>
							This is the Active IPv4 address of the interface the packet is being
   sent from.</t>
					</section>
					<section anchor="sect-5.1.1.2">
						<name>Destination Address</name>
						<t>
							The IPv4 multicast address as assigned by the IANA for VRRP is:</t>
						<t>
							224.0.0.18</t>
						<t>
							This is a link-local scope multicast address.  Routers MUST NOT
   forward a datagram with this destination address, regardless of its
   TTL.</t>
					</section>
					<section anchor="sect-5.1.1.3">
						<name>TTL</name>
						<t>
							The TTL MUST be set to 255.  A VRRP router receiving a packet with
   the TTL not equal to 255 MUST discard the packet.</t>
					</section>
					<section anchor="sect-5.1.1.4">
						<name>Protocol</name>
						<t>
							The IPv4 protocol number assigned by the IANA for VRRP is 112
   (decimal).</t>
					</section>
				</section>
				<section anchor="sect-5.1.2">
					<name>IPv6 Field Descriptions</name>
					<section anchor="sect-5.1.2.1">
						<name>Source Address</name>
						<t>
							This is the IPv6 link-local address of the interface the packet is
   being sent from.</t>
					</section>
					<section anchor="sect-5.1.2.2">
						<name>Destination Address</name>
						<dl newline="true" spacing="normal" indent="3">
							<dt>The IPv6 multicast address assigned by the IANA for VRRP is:</dt>
							<dd>
								FF02:0:0:0:0:0:0:12
							</dd>
						</dl>
						<t>
							This is a link-local scope multicast address.  Routers MUST NOT
   forward a datagram with this destination address, regardless of its
   Hop Limit.</t>
					</section>
					<section anchor="sect-5.1.2.3">
						<name>Hop Limit</name>
						<t>
							The Hop Limit MUST be set to 255.  A VRRP router receiving a packet
   with the Hop Limit not equal to 255 MUST discard the packet.</t>
					</section>
					<section anchor="sect-5.1.2.4">
						<name>Next Header</name>
						<t>
							The IPv6 Next Header protocol assigned by the IANA for VRRP is 112
   (decimal).</t>
					</section>
				</section>
			</section>
			<section anchor="sect-5.2">
				<name>VRRP Field Descriptions</name>
				<section anchor="sect-5.2.1">
					<name>Version</name>
					<t>
						The version field specifies the VRRP protocol version of this packet.
   This document defines version 3.</t>
				</section>
				<section anchor="sect-5.2.2">
					<name>Type</name>
					<t>
						The type field specifies the type of this VRRP packet.  The only
   packet type defined in this version of the protocol is:</t>
					<t>
						1 ADVERTISEMENT</t>
					<t>
						A packet with unknown type MUST be discarded.</t>
				</section>
				<section anchor="sect-5.2.3">
					<name>Virtual Rtr ID (VRID)</name>
					<t>
						The Virtual Rtr ID field identifies the virtual router this packet is
   reporting status for.</t>
				</section>
				<section anchor="sect-5.2.4">
					<name>Priority</name>
					<t>
						The priority field specifies the sending VRRP router's priority for
   the virtual router.  Higher values equal higher priority.  This field
   is an 8-bit unsigned integer field.</t>
					<t>
						The priority value for the VRRP router that owns the IPvX address
   associated with the virtual router MUST be 255 (decimal).</t>
					<t>
						VRRP routers backing up a virtual router MUST use priority values
   between 1-254 (decimal).  The default priority value for VRRP routers
   backing up a virtual router is 100 (decimal).</t>
					<t>
						The priority value zero (0) has special meaning, indicating that the
   current Active has stopped participating in VRRP.  This is used to
   trigger Backup routers to quickly transition to Active without having
   to wait for the current Active to time out.</t>
				</section>
				<section anchor="sect-5.2.5">
					<name>Count IPvX Addr</name>
					<t>
						This is the number of either IPv4 addresses or IPv6 addresses
   contained in this VRRP advertisement.  The minimum value is 1.</t>
				</section>
				<section anchor="sect-5.2.6">
					<name>Rsvd</name>
					<t>
						This field MUST be set to zero on transmission and ignored on
   reception.</t>
				</section>
				<section anchor="sect-5.2.7">
					<name>Maximum Advertisement Interval (Max Adver Int)</name>
					<t>
						The Maximum Advertisement Interval is a 12-bit field that indicates
   the time interval (in centiseconds) between ADVERTISEMENTS.  The
   default is 100 centiseconds (1 second).</t>
					<t>
						Note that higher-priority Active routers with slower transmission
   rates than their Backup routers are unstable.  This is because low-
   priority nodes configured to faster rates could come online and
   decide they should be Actives before they have heard anything from
   the higher-priority Active with a slower rate.  When this happens, it
   is temporary: once the lower-priority node does hear from the higher-
   priority Active, it will relinquish Activeship.</t>
				</section>
				<section anchor="sect-5.2.8">
					<name>Checksum</name>
					<t>
						The checksum field is used to detect data corruption in the VRRP
   message.</t>
					<t>
						The checksum is the 16-bit one's complement of the one's complement
   sum of the entire VRRP message starting with the version field and a
   "pseudo-header" as defined in Section 8.1 of <xref target="RFC2460"/>.  The next
   header field in the "pseudo-header" should be set to 112 (decimal)
   for VRRP.  For computing the checksum, the checksum field is set to
   zero.  See RFC1071 for more detail <xref target="RFC1071"/>.</t>
				</section>
				<section anchor="sect-5.2.9">
					<name>IPvX Address(es)</name>
					<t>
						This refers to one or more IPvX addresses associated with the virtual
   router.  The number of addresses included is specified in the "Count IP Addr" field.  These fields are used for troubleshooting
   misconfigured routers.  If more than one address is sent, it is
   recommended that all routers be configured to send these addresses in
   the same order to make it easier to do this comparison.</t>
					<t>
						For IPv4 addresses, this refers to one or more IPv4 addresses that
   are backed up by the virtual router.</t>
					<t>
						For IPv6, the first address must be the IPv6 link-local address
   associated with the virtual router.</t>
					<t>
						This field contains either one or more IPv4 addresses, or one or more
   IPv6 addresses, that is, IPv4 and IPv6 MUST NOT both be carried in
   one IPvX Address field.</t>
				</section>
			</section>
		</section>
		<section anchor="sect-6">
			<name>Protocol State Machine</name>
			<section anchor="sect-6.1">
				<name>Parameters Per Virtual Router</name>
				<dl newline="false" spacing="normal" indent="28">
					<dt>VRID</dt>
					<dd>
						<t>
							Virtual Router Identifier.  Configurable
						</t>
						<t>
							item in the range 1-255 (decimal).  There
                               is no default.
						</t>
					</dd>
					<dt>Priority</dt>
					<dd>
						<t>
							Priority value to be used by this VRRP
						</t>
						<t>
							router in Active election for this
                               virtual router.  The value of 255
                               (decimal) is reserved for the router that
                               owns the IPvX address associated with the
                               virtual router.  The value of 0 (zero) is
                               reserved for the Active router to
                               indicate it is releasing responsibility
                               for the virtual router.  The range 1-254
                               (decimal) is available for VRRP routers
                               backing up the virtual router.  Higher
                               values indicate higher priorities.  The
                               default value is 100 (decimal).
						</t>
					</dd>
					<dt>IPv4_Addresses</dt>
					<dd>
						<t>
							One or more IPv4 addresses associated
						</t>
						<t>
							with this virtual router.  Configured
                               item with no default.
						</t>
					</dd>
					<dt>IPv6_Addresses</dt>
					<dd>
						<t>
							One or more IPv6 addresses associated
						</t>
						<t>
							with this virtual router.  Configured
                               item with no default.  The first address
                               must be the Link-Local address associated
                               with the virtual router.
						</t>
					</dd>
					<dt>Advertisement_Interval</dt>
					<dd>
						<t>
							Time interval between ADVERTISEMENTS
						</t>
						<t>
							(centiseconds).  Default is 100
                               centiseconds (1 second).
						</t>
					</dd>
					<dt>Active_Adver_Interval</dt>
					<dd>
						<t>
							Advertisement interval contained in
						</t>
						<t>
							ADVERTISEMENTS received from the Active
                               (centiseconds).  This value is saved by
                               virtual routers in the Backup state and
                               used to compute Skew_Time and
                               Active_Down_Interval.  The initial value
                               is the same as Advertisement_Interval.
						</t>
					</dd>
					<dt>Skew_Time</dt>
					<dd>
						<t>
							Time to skew Active_Down_Interval in
						</t>
						<t>
							centiseconds.  Calculated as
						</t>
						<t>
							(((256 - priority) * Active_Adver_Interval) / 256)
						</t>
					</dd>
					<dt>Active_Down_Interval</dt>
					<dd>
						<t>
							Time interval for Backup to declare
						</t>
						<t>
							Active down (centiseconds).
                               Calculated as
						</t>
						<t>
							(3 * Active_Adver_Interval) + Skew_time
						</t>
					</dd>
					<dt>Preempt_Mode</dt>
					<dd>
						<t>
							Controls whether a (starting or
						</t>
						<t>
							restarting) higher-priority Backup router
                               preempts a lower-priority Active router.
                               Values are True to allow preemption and
                               False to prohibit preemption.  Default is
                               True.
						</t>
						<t>
							Note: The exception is that the router
                               that owns the IPvX address associated
                               with the virtual router always preempts,
                               independent of the setting of this flag.
						</t>
					</dd>
					<dt>Accept_Mode</dt>
					<dd>
						<t>
							Controls whether a virtual router in
						</t>
						<t>
							Active state will accept packets
                               addressed to the address owner's IPvX
                               address as its own if it is not the IPvX
                               address owner.  The default is False.
                               Deployments that rely on, for example,
                               pinging the address owner's IPvX address
                               may wish to configure Accept_Mode to
                               True.
						</t>
						<t>
							Note: IPv6 Neighbor Solicitations and
                               Neighbor Advertisements MUST NOT be
                               dropped when Accept_Mode is False.
						</t>
					</dd>
					<dt>Virtual_Router_MAC_Address</dt>
					<dd>
						<t>
							The MAC address used for the source MAC
						</t>
						<t>
							address in VRRP advertisements and
                               advertised in ARP responses as the MAC
                               address to use for IP_Addresses.
						</t>
					</dd>
				</dl>
			</section>
			<section anchor="sect-6.2">
				<name>Timers</name>
				<dl newline="false" spacing="normal" indent="25">
					<dt>Active_Down_Timer</dt>
					<dd>
						<t>
							Timer that fires when ADVERTISEMENT has not
						</t>
						<t>
							been heard for Active_Down_Interval.
						</t>
					</dd>
					<dt>Adver_Timer</dt>
					<dd>
						<t>
							Timer that fires to trigger sending of
						</t>
						<t>
							ADVERTISEMENT based on
                            Advertisement_Interval.
						</t>
					</dd>
				</dl>
			</section>
			<section anchor="sect-6.3">
				<name>State Transition Diagram</name>
				<artwork><![CDATA[
                          +---------------+
               +--------->|               |<-------------+
               |          |  Initialize   |              |
               |   +------|               |----------+   |
               |   |      +---------------+          |   |
               |   |                                 |   |
               |   V                                 V   |
       +---------------+                       +---------------+
       |               |---------------------->|               |
       |    Active     |                       |    Backup     |
       |               |<----------------------|               |
       +---------------+                       +---------------+
]]></artwork>
			</section>
			<section anchor="sect-6.4">
				<name>State Descriptions</name>
				<t>
					In the state descriptions below, the state names are identified by
   {state-name}, and the packets are identified by all-uppercase
   characters.</t>
				<t>
					A VRRP router implements an instance of the state machine for each
   virtual router election it is participating in.</t>
				<section anchor="sect-6.4.1">
					<name>Initialize</name>
					<t>
						The purpose of this state is to wait for a Startup event, that is, an
   implementation-defined mechanism that initiates the protocol once it
   has been configured.  The configuration mechanism is out of scope of
   this specification.</t>
					<dl newline="true" spacing="normal" indent="3">
						<dt>(100) If a Startup event is received, then:</dt>
						<dd>
							<t>
								(105) - If the Priority = 255 (i.e., the router owns the IPvX
      address associated with the virtual router), then:
							</t>
							<t>
								(110) + Send an ADVERTISEMENT
							</t>
							<dl newline="true" spacing="normal" indent="3">
								<dt>(115) + If the protected IPvX address is an IPv4 address, then:</dt>
								<dd>
									(120) * Broadcast a gratuitous ARP request containing the
            virtual router MAC address for each IP address associated
            with the virtual router.
								</dd>
							</dl>
						</dd>
					</dl>
					<artwork><![CDATA[
      (125) + else // IPv6
]]></artwork>
					<dl newline="false" spacing="normal" indent="9">
						<dt/>
						<dd>
							(130) * For each IPv6 address associated with the virtual
            router, send an unsolicited ND Neighbor Advertisement with
            the Router Flag (R) set, the Solicited Flag (S) unset, the
            Override flag (O) set, the target address set to the IPv6
            address of the virtual router, and the target link-layer
            address set to the virtual router MAC address.</dd>
					</dl>
					<artwork><![CDATA[
      (135) +endif // was protected addr IPv4?

      (140) + Set the Adver_Timer to Advertisement_Interval

      (145) + Transition to the {Active} state

   (150) - else // rtr does not own virt addr

      (155) + Set Active_Adver_Interval to Advertisement_Interval

      (160) + Set the Active_Down_Timer to Active_Down_Interval

      (165) + Transition to the {Backup} state

   (170) -endif // priority was not 255

   (175) endif // startup event was recv
]]></artwork>
				</section>
				<section anchor="sect-6.4.2">
					<name>Backup</name>
					<t>
						The purpose of the {Backup} state is to monitor the availability and
   state of the Active router.</t>
					<dl newline="true" spacing="normal" indent="3">
						<dt>(300) While in this state, a VRRP router MUST do the following:</dt>
						<dd>
							<t>
								(305) - If the protected IPvX address is an IPv4 address, then:
							</t>
							<t>
								(310) + MUST NOT respond to ARP requests for the IPv4
         address(es) associated with the virtual router.
							</t>
						</dd>
					</dl>
					<artwork><![CDATA[
   (315) - else // protected addr is IPv6
]]></artwork>
					<dl newline="false" spacing="normal" indent="6">
						<dt/>
						<dd>
							(320) + MUST NOT respond to ND Neighbor Solicitation messages
         for the IPv6 address(es) associated with the virtual router.</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="6">
						<dt/>
						<dd>
							(325) + MUST NOT send ND Router Advertisement messages for the
         virtual router.</dd>
					</dl>
					<artwork><![CDATA[
   (330) -endif // was protected addr IPv4?
]]></artwork>
					<dl newline="false" spacing="normal" indent="3">
						<dt/>
						<dd>
							(335) - MUST discard packets with a destination link-layer MAC
      address equal to the virtual router MAC address.</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="3">
						<dt/>
						<dd>
							(340) - MUST NOT accept packets addressed to the IPvX address(es)
      associated with the virtual router.</dd>
					</dl>
					<ul empty="true" spacing="normal">
						<li>
							<dl newline="true" spacing="normal" indent="3">
								<dt>(345) - If a Shutdown event is received, then:</dt>
								<dd>
									<t>
										(350) + Cancel the Active_Down_Timer
									</t>
									<t>
										(355) + Transition to the {Initialize} state
									</t>
								</dd>
							</dl>
						</li>
					</ul>
					<artwork><![CDATA[
   (360) -endif // shutdown recv

   (365) - If the Active_Down_Timer fires, then:

      (370) + Send an ADVERTISEMENT

      (375) + If the protected IPvX address is an IPv4 address, then:
]]></artwork>
					<dl newline="false" spacing="normal" indent="9">
						<dt/>
						<dd>
							(380) * Broadcast a gratuitous ARP request on that interface
            containing the virtual router MAC address for each IPv4
            address associated with the virtual router.</dd>
					</dl>
					<artwork><![CDATA[
      (385) + else // ipv6
]]></artwork>
					<dl newline="false" spacing="normal" indent="9">
						<dt/>
						<dd>
							(390) * Compute and join the Solicited-Node multicast
            address <xref target="RFC4291"/> for the IPv6 address(es) associated with
            the virtual router.</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="9">
						<dt/>
						<dd>
							(395) * For each IPv6 address associated with the virtual
            router, send an unsolicited ND Neighbor Advertisement with
            the Router Flag (R) set, the Solicited Flag (S) unset, the
            Override flag (O) set, the target address set to the IPv6
            address of the virtual router, and the target link-layer
            address set to the virtual router MAC address.</dd>
					</dl>
					<artwork><![CDATA[
      (400) +endif // was protected addr ipv4?

      (405) + Set the Adver_Timer to Advertisement_Interval

      (410) + Transition to the {Active} state

   (415) -endif // Active_Down_Timer fired

   (420) - If an ADVERTISEMENT is received, then:

      (425) + If the Priority in the ADVERTISEMENT is zero, then:
]]></artwork>
					<artwork><![CDATA[
         (430) * Set the Active_Down_Timer to Skew_Time
      (440) + else // priority non-zero
]]></artwork>
					<dl newline="false" spacing="normal" indent="9">
						<dt/>
						<dd>
							(445) * If Preempt_Mode is False, or if the Priority in the
            ADVERTISEMENT is greater than or equal to the local
            Priority, then:</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="12">
						<dt/>
						<dd>
							(450) @ Set Active_Adver_Interval to Adver Interval
               contained in the ADVERTISEMENT</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="12">
						<dt/>
						<dd>
							(455) @ Recompute the Active_Down_Interval</dd>
					</dl>
					<artwork><![CDATA[
            (460) @ Reset the Active_Down_Timer to
            Active_Down_Interval

         (465) * else // preempt was true or priority was less

            (470) @ Discard the ADVERTISEMENT

         (475) *endif // preempt test

      (480) +endif // was priority zero?

   (485) -endif // was advertisement recv?

(490) endwhile // Backup state
]]></artwork>
				</section>
				<section anchor="sect-6.4.3">
					<name>Active</name>
					<t>
						While in the {Active} state, the router functions as the forwarding
   router for the IPvX address(es) associated with the virtual router.</t>
					<t>
						Note that in the Active state, the Preempt_Mode Flag is not
   considered.</t>
					<dl newline="true" spacing="normal" indent="3">
						<dt>(600) While in this state, a VRRP router MUST do the following:</dt>
						<dd>
							<t>
								(605) - If the protected IPvX address is an IPv4 address, then:
							</t>
							<t>
								(610) + MUST respond to ARP requests for the IPv4 address(es)
         associated with the virtual router.
							</t>
						</dd>
					</dl>
					<artwork><![CDATA[
   (615) - else // ipv6
]]></artwork>
					<dl newline="false" spacing="normal" indent="6">
						<dt/>
						<dd>
							(620) + MUST be a member of the Solicited-Node multicast
         address for the IPv6 address(es) associated with the virtual
         router.</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="6">
						<dt/>
						<dd>
							(625) + MUST respond to ND Neighbor Solicitation message for
         the IPv6 address(es) associated with the virtual router.</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="6">
						<dt/>
						<dd>
							(630) ++ MUST send ND Router Advertisements for the virtual
         router.</dd>
					</dl>
					<ul empty="true" spacing="normal">
						<li>
							<dl newline="false" spacing="normal" indent="41">
								<dt>(635) ++ If Accept_Mode is False:</dt>
								<dd>
									<t>
										MUST NOT drop IPv6 Neighbor
									</t>
									<t>
										Solicitations and Neighbor Advertisements.
									</t>
								</dd>
							</dl>
						</li>
					</ul>
					<artwork><![CDATA[
   (640) +-endif // ipv4?
]]></artwork>
					<dl newline="false" spacing="normal" indent="3">
						<dt/>
						<dd>
							(645) - MUST forward packets with a destination link-layer MAC
      address equal to the virtual router MAC address.</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="3">
						<dt/>
						<dd>
							(650) - MUST accept packets addressed to the IPvX address(es)
      associated with the virtual router if it is the IPvX address owner
      or if Accept_Mode is True.  Otherwise, MUST NOT accept these
      packets.</dd>
					</dl>
					<ul empty="true" spacing="normal">
						<li>
							<dl newline="true" spacing="normal" indent="3">
								<dt>(655) - If a Shutdown event is received, then:</dt>
								<dd>
									<t>
										(660) + Cancel the Adver_Timer
									</t>
									<t>
										(665) + Send an ADVERTISEMENT with Priority = 0
									</t>
									<t>
										(670) + Transition to the {Initialize} state
									</t>
								</dd>
							</dl>
						</li>
					</ul>
					<artwork><![CDATA[
   (675) -endif // shutdown recv

   (680) - If the Adver_Timer fires, then:

      (685) + Send an ADVERTISEMENT

      (690) + Reset the Adver_Timer to Advertisement_Interval

   (695) -endif // advertisement timer fired

   (700) - If an ADVERTISEMENT is received, then:

      (705) -+ If the Priority in the ADVERTISEMENT is zero, then:

         (710) -* Send an ADVERTISEMENT

         (715) -* Reset the Adver_Timer to Advertisement_Interval

      (720) -+ else // priority was non-zero
]]></artwork>
					<dl newline="false" spacing="normal" indent="9">
						<dt/>
						<dd>
							(725) -* If the Priority in the ADVERTISEMENT is greater
            than the local Priority,</dd>
					</dl>
					<artwork><![CDATA[
         (730) -* or
]]></artwork>
					<dl newline="false" spacing="normal" indent="9">
						<dt/>
						<dd>
							(735) -* If the Priority in the ADVERTISEMENT is equal to
            the local Priority and the Active IPvX Address of the
            sender is greater than the local Active IPvX Address, then:</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="12">
						<dt/>
						<dd>
							(740) -@ Cancel Adver_Timer</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="12">
						<dt/>
						<dd>
							(745) -@ Set Active_Adver_Interval to Adver Interval
               contained in the ADVERTISEMENT</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="12">
						<dt/>
						<dd>
							(750) -@ Recompute the Skew_Time</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="12">
						<dt/>
						<dd>
							(755) @ Recompute the Active_Down_Interval</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="12">
						<dt/>
						<dd>
							(760) @ Set Active_Down_Timer to Active_Down_Interval</dd>
					</dl>
					<dl newline="false" spacing="normal" indent="12">
						<dt/>
						<dd>
							(765) @ Transition to the {Backup} state</dd>
					</dl>
					<artwork><![CDATA[
         (770) * else // new Active logic

            (775) @ Discard ADVERTISEMENT

         (780) *endif // new Active detected

      (785) +endif // was priority zero?

   (790) -endif // advert recv

(795) endwhile // in Active
]]></artwork>
				</section>
			</section>
		</section>
		<section anchor="sect-7">
			<name>Sending and Receiving VRRP Packets</name>
			<section anchor="sect-7.1">
				<name>Receiving VRRP Packets</name>
				<dl newline="true" spacing="normal" indent="3">
					<dt>The following functions are performed when a VRRP packet is received:</dt>
					<dd>
						<ul spacing="normal">
							<li>
								<t>If the received packet is an IPv4 packet, then:</t>
								<ul spacing="normal">
									<li>MUST verify that the IPv4 TTL is 255.</li>
								</ul>
							</li>
						</ul>
					</dd>
				</dl>
				<artwork><![CDATA[
   - else // ipv6 recv

      + MUST verify that the IPv6 Hop Limit is 255.

   -endif

   - MUST verify that the VRRP version is 3.
]]></artwork>
				<dl newline="false" spacing="normal" indent="3">
					<dt/>
					<dd>
						- MUST verify that the received packet contains the complete VRRP
      packet (including fixed fields, and IPvX address).</dd>
				</dl>
				<ul empty="true" spacing="normal">
					<li>
						<ul spacing="normal">
							<li>MUST verify the VRRP checksum.</li>
						</ul>
					</li>
				</ul>
				<dl newline="false" spacing="normal" indent="3">
					<dt/>
					<dd>
						- MUST verify that the VRID is configured on the receiving
      interface and the local router is not the IPvX address owner
      (Priority = 255 (decimal)).</dd>
				</dl>
				<t>
					If any one of the above checks fails, the receiver MUST discard the
   packet, SHOULD log the event, and MAY indicate via network management
   that an error occurred.</t>
				<dl newline="false" spacing="normal" indent="3">
					<dt/>
					<dd>
						- MAY verify that "Count IPvX Addrs" and the list of IPvX
      address(es) match the IPvX Address(es) configured for the VRID.</dd>
				</dl>
				<t>
					If the above check fails, the receiver SHOULD log the event and MAY
   indicate via network management that a misconfiguration was detected.</t>
			</section>
			<section anchor="sect-7.2">
				<name>Transmitting VRRP Packets</name>
				<t>
					The following operations MUST be performed when transmitting a VRRP
   packet:</t>
				<dl newline="false" spacing="normal" indent="3">
					<dt/>
					<dd>
						- Fill in the VRRP packet fields with the appropriate virtual
      router configuration state</dd>
				</dl>
				<ul empty="true" spacing="normal">
					<li>
						<ul spacing="normal">
							<li>Compute the VRRP checksum</li>
							<li>
								<t>If the protected address is an IPv4 address, then:</t>
								<ul spacing="normal">
									<li>Set the source MAC address to virtual router MAC Address</li>
									<li>Set the source IPv4 address to interface Active IPv4 address</li>
								</ul>
							</li>
						</ul>
					</li>
				</ul>
				<artwork><![CDATA[
   - else // ipv6

      + Set the source MAC address to virtual router MAC Address
]]></artwork>
				<dl newline="false" spacing="normal" indent="6">
					<dt/>
					<dd>
						+ Set the source IPv6 address to interface link-local IPv6
         address</dd>
				</dl>
				<dl newline="false" spacing="normal" indent="6">
					<dt/>
					<dd>
						-endif</dd>
				</dl>
				<ul empty="true" spacing="normal">
					<li>
						<ul spacing="normal">
							<li>Set the IPvX protocol to VRRP</li>
							<li>Send the VRRP packet to the VRRP IPvX multicast group</li>
						</ul>
					</li>
				</ul>
				<t>
					Note: VRRP packets are transmitted with the virtual router MAC
   address as the source MAC address to ensure that learning bridges
   correctly determine the LAN segment the virtual router is
   attached to.</t>
			</section>
			<section anchor="sect-7.3">
				<name>Virtual Router MAC Address</name>
				<t>
					The virtual router MAC address associated with a virtual router is an
   IEEE 802 MAC Address in the following format:</t>
				<t>
					IPv4 case: 00-00-5E-00-01-{VRID} (in hex, in Internet-standard bit-
   order)</t>
				<t>
					The first three octets are derived from the IANA's Organizational
   Unique Identifier (OUI).  The next two octets (00-01) indicate the
   address block assigned to the VRRP for IPv4 protocol. {VRID} is the
   VRRP Virtual Router Identifier.  This mapping provides for up to 255
   IPv4 VRRP routers on a network.</t>
				<t>
					IPv6 case: 00-00-5E-00-02-{VRID} (in hex, in Internet-standard bit-
   order)</t>
				<t>
					The first three octets are derived from the IANA's OUI.  The next two
   octets (00-02) indicate the address block assigned to the VRRP for
   IPv6 protocol. {VRID} is the VRRP Virtual Router Identifier.  This
   mapping provides for up to 255 IPv6 VRRP routers on a network.</t>
			</section>
			<section anchor="sect-7.4">
				<name>IPv6 Interface Identifiers</name>
				<t>
					IPv6 routers running VRRP MUST create their Interface Identifiers in
   the normal manner (e.g., "Transmission of IPv6 Packets over Ethernet Networks" <xref target="RFC2464"/>).  They MUST NOT use the virtual router MAC
   address to create the Modified Extended Unique Identifier (EUI)-64
   identifiers.</t>
				<t>
					This VRRP specification describes how to advertise and resolve the
   VRRP router's IPv6 link-local address and other associated IPv6
   addresses into the virtual router MAC address.</t>
			</section>
		</section>
		<section anchor="sect-8">
			<name>Operational Issues</name>
			<section anchor="sect-8.1">
				<name>IPv4</name>
				<section anchor="sect-8.1.1">
					<name>ICMP Redirects</name>
					<t>
						ICMP redirects may be used normally when VRRP is running between a
   group of routers.  This allows VRRP to be used in environments where
   the topology is not symmetric.</t>
					<t>
						The IPv4 source address of an ICMP redirect should be the address
   that the end-host used when making its next-hop routing decision.  If
   a VRRP router is acting as Active for virtual router(s) containing
   addresses it does not own, then it must determine which virtual
   router the packet was sent to when selecting the redirect source
   address.  One method to deduce the virtual router used is to examine
   the destination MAC address in the packet that triggered the
   redirect.</t>
					<t>
						It may be useful to disable redirects for specific cases where VRRP
   is being used to load-share traffic between a number of routers in a
   symmetric topology.</t>
				</section>
				<section anchor="sect-8.1.2">
					<name>Host ARP Requests</name>
					<t>
						When a host sends an ARP request for one of the virtual router IPv4
   addresses, the Virtual Router Active MUST respond to the ARP request
   with an ARP response that indicates the virtual MAC address for the
   virtual router.  Note that the source address of the Ethernet frame
   of this ARP response is the physical MAC address of the physical
   router.  The Virtual Router Active MUST NOT respond with its physical
   MAC address in the ARP response.  This allows the client to always
   use the same MAC address regardless of the current Active router.</t>
					<t>
						When a VRRP router restarts or boots, it SHOULD NOT send any ARP
   messages using its physical MAC address for the IPv4 address it owns;
   it should only send ARP messages that include virtual MAC addresses.</t>
					<t>
						This may entail the following:</t>
					<ul spacing="normal">
						<li>When configuring an interface, Virtual Router Active routers
      should broadcast a gratuitous ARP request containing the virtual
      router MAC address for each IPv4 address on that interface.</li>
						<li>At system boot, when initializing interfaces for VRRP operation,
      delay gratuitous ARP requests and ARP responses until both the
      IPv4 address and the virtual router MAC address are configured.</li>
						<li>When, for example, ssh access to a particular VRRP router is
      required, an IP address known to belong to that router must be
      used.</li>
					</ul>
				</section>
				<section anchor="sect-8.1.3">
					<name>Proxy ARP</name>
					<t>
						If Proxy ARP is to be used on a VRRP router, then the VRRP router
   must advertise the virtual router MAC address in the Proxy ARP
   message.  Doing otherwise could cause hosts to learn the real MAC
   address of the VRRP router.</t>
				</section>
			</section>
			<section anchor="sect-8.2">
				<name>IPv6</name>
				<section anchor="sect-8.2.1">
					<name>ICMPv6 Redirects</name>
					<t>
						ICMPv6 redirects may be used normally when VRRP is running between a
   group of routers <xref target="RFC4443"/>.  This allows VRRP to be used in
   environments where the topology is not symmetric (e.g., the VRRP
   routers do not connect to the same destinations).</t>
					<t>
						The IPv6 source address of an ICMPv6 redirect should be the address
   that the end-host used when making its next-hop routing decision.  If
   a VRRP router is acting as Active for virtual router(s) containing
   addresses it does not own, then it must determine which virtual
   router the packet was sent to when selecting the redirect source
   address.  A method to deduce the virtual router used is to examine
   the destination MAC address in the packet that triggered the
   redirect.</t>
				</section>
				<section anchor="sect-8.2.2">
					<name>ND Neighbor Solicitation</name>
					<t>
						When a host sends an ND Neighbor Solicitation message for the virtual
   router IPv6 address, the Virtual Router Active MUST respond to the ND
   Neighbor Solicitation message with the virtual MAC address for the
   virtual router.  The Virtual Router Active MUST NOT respond with its
   physical MAC address.  This allows the client to always use the same
   MAC address regardless of the current Active router.</t>
					<t>
						When a Virtual Router Active sends an ND Neighbor Solicitation
   message for a host's IPv6 address, the Virtual Router Active MUST
   include the virtual MAC address for the virtual router if it sends a
   source link-layer address option in the neighbor solicitation
   message.  It MUST NOT use its physical MAC address in the source
   link-layer address option.</t>
					<t>
						When a VRRP router restarts or boots, it SHOULD NOT send any ND
   messages with its physical MAC address for the IPv6 address it owns;
   it should only send ND messages that include virtual MAC addresses.</t>
					<t>
						This may entail the following:</t>
					<ul spacing="normal">
						<li>When configuring an interface, Virtual Router Active routers
      should send an unsolicited ND Neighbor Advertisement message
      containing the virtual router MAC address for the IPv6 address on
      that interface.</li>
						<li>At system boot, when initializing interfaces for VRRP operation,
      all ND Router and Neighbor Advertisements and Solicitation
      messages must be delayed until both the IPv6 address and the
      virtual router MAC address are configured.</li>
					</ul>
					<t>
						Note that on a restarting Active router where the VRRP protected
   address is the interface address, (that is, priority 255) duplicate
   address detection (DAD) may fail, as the Backup router may answer
   that it owns the address.  One solution is to not run DAD in this
   case.</t>
				</section>
				<section anchor="sect-8.2.3">
					<name>Router Advertisements</name>
					<t>
						When a Backup VRRP router has become Active for a virtual router, it
   is responsible for sending Router Advertisements for the virtual
   router as specified in <xref target="sect-6.4.3"/>.  The Backup routers must be
   configured to send the same Router Advertisement options as the
   address owner.</t>
					<t>
						Router Advertisement options that advertise special services (e.g.,
   Home Agent Information Option) that are present in the address owner
   should not be sent by the address owner unless the Backup routers are
   prepared to assume these services in full and have a complete and
   synchronized database for this service.</t>
				</section>
			</section>
			<section anchor="sect-8.3">
				<name>IPvX</name>
				<section anchor="sect-8.3.1">
					<name>Potential Forwarding Loop</name>
					<t>
						If it is not the address owner, a VRRP router SHOULD NOT forward
   packets addressed to the IPvX address for which it becomes Active.
   Forwarding these packets would result in unnecessary traffic.  Also,
   in the case of LANs that receive packets they transmit (e.g., Token
   Ring), this can result in a forwarding loop that is only terminated
   when the IPvX TTL expires.</t>
					<t>
						One such mechanism for VRRP routers is to add/delete a reject host
   route for each adopted IPvX address when transitioning to/from Active
   state.</t>
				</section>
				<section anchor="sect-8.3.2">
					<name>Recommendations Regarding Setting Priority Values</name>
					<t>
						A priority value of 255 designates a particular router as the "IPvX address owner".  Care must be taken not to configure more than one
   router on the link in this way for a single VRID.</t>
					<t>
						Routers with priority 255 will, as soon as they start up, preempt all
   lower-priority routers.  No more than one router on the link is to be
   configured with priority 255, especially if preemption is set.  If no
   router has this priority, and preemption is disabled, then no
   preemption will occur.</t>
					<t>
						When there are multiple Backup routers, their priority values should
   be uniformly distributed.  For example, if one Backup router has the
   default priority of 100 and another Backup Router is added, a
   priority of 50 would be a better choice for it than 99 or 100, in
   order to facilitate faster convergence.</t>
				</section>
			</section>
			<section anchor="sect-8.4">
				<name>VRRPv3 and VRRPv2 Interoperation</name>
				<section anchor="sect-8.4.1">
					<name>Assumptions</name>
					<ol spacing="normal" type="1"><li>VRRPv2 and VRRPv3 interoperation is optional.</li>
						<li>Mixing VRRPv2 and VRRPv3 should only be done when transitioning
      from VRRPv2 to VRRPv3.  Mixing the two versions should not be
      considered a permanent solution.</li>
					</ol>
				</section>
				<section anchor="sect-8.4.2">
					<name>VRRPv3 Support of VRRPv2</name>
					<t>
						As mentioned above, this support is intended for upgrade scenarios
   and is NOT recommended for permanent deployments.</t>
					<t>
						An implementation MAY implement a configuration flag that tells it to
   listen for and send both VRRPv2 and VRRPv3 advertisements.</t>
					<t>
						When a virtual router is configured this way and is the Active, it
   MUST send both types at the configured rate, even if sub-second.</t>
					<t>
						When a virtual router is configured this way and is the Backup, it
   should time out based on the rate advertised by the Active; in the
   case of a VRRPv2 Active, this means it must translate the timeout
   value it receives (in seconds) into centiseconds.  Also, a Backup
   should ignore VRRPv2 advertisements from the current Active if it is
   also receiving VRRPv3 packets from it.  It MAY report when a VRRPv3
   Active is *not* sending VRRPv2 packets: that suggests they don't
   agree on whether they're supporting VRRPv2 routers.</t>
				</section>
				<section anchor="sect-8.4.3">
					<name>VRRPv3 Support of VRRPv2 Considerations</name>
					<section anchor="sect-8.4.3.1">
						<name>Slow, High-Priority Actives</name>
						<t>
							See also <xref target="sect-5.2.7"/>, "Maximum Advertisement Interval (Max Adver Int)".</t>
						<t>
							The VRRPv2 Active router interacting with a sub-second VRRPv3 Backup
   router is the most important example of this.</t>
						<t>
							A VRRPv2 implementation should not be given a higher priority than a
   VRRPv2/VRRPv3 implementation it is interacting with if the VRRPv2/
   VRRPv3 rate is sub-second.</t>
					</section>
					<section anchor="sect-8.4.3.2">
						<name>Overwhelming VRRPv2 Backups</name>
						<t>
							It seems possible that a VRRPv3 Active router sending at centisecond
   rates could potentially overwhelm a VRRPv2 Backup router with
   potentially unclear results.</t>
						<t>
							In this upgrade case, a deployment should initially run the VRRPv3
   Active routers with lower frequencies (e.g., 100 centiseconds) until
   the VRRPv2 routers are upgraded.  Then, once the deployment has
   convinced itself that VRRPv3 is working properly, the VRRPv2 support
   may be unconfigured and then the desired sub-second rates configured.</t>
					</section>
				</section>
			</section>
		</section>
		<section anchor="sect-9">
			<name>Security Considerations</name>
			<t>
				VRRP for IPvX does not currently include any type of authentication.
   Earlier versions of the VRRP (for IPv4) specification included
   several types of authentication ranging from none to strong.
   Operational experience and further analysis determined that these did
   not provide sufficient security to overcome the vulnerability of
   misconfigured secrets, causing multiple Actives to be elected.  Due
   to the nature of the VRRP protocol, even if VRRP messages are
   cryptographically protected, it does not prevent hostile nodes from
   behaving as if they are a VRRP Active, creating multiple Actives.
   Authentication of VRRP messages could have prevented a hostile node
   from causing all properly functioning routers from going into Backup
   state.  However, having multiple Actives can cause as much disruption
   as no routers, which authentication cannot prevent.  Also, even if a
   hostile node could not disrupt VRRP, it can disrupt ARP and create
   the same effect as having all routers go into Backup.</t>
			<t>
				Some L2 switches provide the capability to filter out, for example,
   ARP and/or ND messages from end-hosts on a switch-port basis.  This
   mechanism could also filter VRRP messages from switch ports
   associated with end-hosts and can be considered for deployments with
   untrusted hosts.</t>
			<t>
				It should be noted that these attacks are not worse and are a subset
   of the attacks that any node attached to a LAN can do independently
   of VRRP.  The kind of attacks a malicious node on a LAN can do
   include promiscuously receiving packets for any router's MAC address;
   sending packets with the router's MAC address as the source MAC
   address in the L2 header to tell the L2 switches to send packets
   addressed to the router to the malicious node instead of the router;
   send redirects to tell the hosts to send their traffic somewhere
   else; send unsolicited ND replies; answer ND requests; etc.  All of
   this can be done independently of implementing VRRP.  VRRP does not
   add to these vulnerabilities.</t>
			<t>
				Independent of any authentication type, VRRP includes a mechanism
   (setting TTL = 255, checking on receipt) that protects against VRRP
   packets being injected from another remote network.  This limits most
   vulnerabilities to local attacks.</t>
			<t>
				VRRP does not provide any confidentiality.  Confidentiality is not
   necessary for the correct operation of VRRP, and there is no
   information in the VRRP messages that must be kept secret from other
   nodes on the LAN.</t>
			<t>
				In the context of IPv6 operation, if SEcure Neighbor Discovery (SEND)
   is deployed, VRRP is compatible with the "trust anchor" and "trust anchor or cga" modes of SEND <xref target="RFC3971"/>.  The SEND configuration needs
   to give the Active and Backup routers the same prefix delegation in
   the certificates so that Active and Backup routers advertise the same
   set of subnet prefixes.  However, the Active and Backup routers
   should have their own key pairs to avoid private key sharing.</t>
		</section>
		<section anchor="sect-10">
			<name>Contributors and Acknowledgments</name>
			<t>
				The editor would like to thank V. Ullanatt for his review of an early
   version.  This document consists of very little new material (there
   is some new text in Appendix A) and was created by merging and
   "xml-izing" <xref target="VRRP-IPv6"/> and <xref target="RFC3768"/>, and then adding in the changes
   discussed recently on the Virtual Router Redundancy Protocol working
   group's mailing list.  R. Hinden is the author and J. Cruz the editor
   of the former.  The contributors for the latter appear below.</t>
			<t>
				The IPv6 text in this specification is based on <xref target="RFC2338"/>.  The
   authors of RFC2338 are S. Knight, D. Weaver, D. Whipple, R. Hinden,
   D. Mitzel, P. Hunt, P. Higginson, M. Shand, and A. Lindem.</t>
			<t>
				The author of <xref target="VRRP-IPv6"/> would also like to thank Erik Nordmark,
   Thomas Narten, Steve Deering, Radia Perlman, Danny Mitzel, Mukesh
   Gupta, Don Provan, Mark Hollinger, John Cruz, and Melissa Johnson for
   their helpful suggestions.</t>
			<t>
				The IPv4 text in this specification is based on <xref target="RFC3768"/>.  The
   authors of that specification would like to thank Glen Zorn, Michael
   Lane, Clark Bremer, Hal Peterson, Tony Li, Barbara Denny, Joel
   Halpern, Steve Bellovin, Thomas Narten, Rob Montgomery, Rob Coltun,
   Radia Perlman, Russ Housley, Harald Alvestrand, Steve Bellovin, Ned
   Freed, Ted Hardie, Russ Housley, Bert Wijnen, Bill Fenner, and Alex
   Zinin for their comments and suggestions.</t>
		</section>
		<section anchor="sect-11">
			<name>IANA Considerations</name>
			<t>
				IANA has assigned an IPv6 link-local scope multicast address for VRRP
   for IPv6.  The IPv6 multicast address is as follows:</t>
			<dl newline="false" spacing="normal" indent="3">
				<dt/>
				<dd>
					FF02:0:0:0:0:0:0:12</dd>
			</dl>
			<t>
				The values assigned address should be entered into <xref target="sect-5.1.2.2"/>.</t>
			<t>
				The IANA has reserved a block of IANA Ethernet unicast addresses for
   VRRP for IPv6 in the range</t>
			<dl newline="false" spacing="normal" indent="3">
				<dt/>
				<dd>
					00-00-5E-00-02-00 to 00-00-5E-00-02-FF (in hex)</dd>
			</dl>
			<dl newline="true" spacing="normal" indent="3">
				<dt>Similar assignments are documented at:</dt>
				<dd>
					<eref target="http://www.iana.org"/> </dd>
			</dl>
		</section>
	</middle>
	<back>
				<references title="Normative References">
				<reference anchor="RFC5798">
				<front>
				<title>Virtual Router Redundancy Protocol (VRRP) Version 3 for IPv4 and IPv6</title>
				<author initials="S." surname="Nadas" fullname="Stephen Nadas">
				<organization>Ericsson</organization>
			</author>
				<date year="2010" />
				
				<area>VRRP Working Group</area>
				<workgroup>Internet Engineering Task Force</workgroup>
				
				<abstract>
				<t>
				This memo defines the Virtual Router Redundancy Protocol (VRRP) for
				IPv4 and IPv6.  It is version three (3) of the protocol, and it is
				based on VRRP (version 2) for IPv4 that is defined in RFC 3768 and in
				"Virtual Router Redundancy Protocol for IPv6".  VRRP specifies an
				election protocol that dynamically assigns responsibility for a
				virtual router to one of the VRRP routers on a LAN.  The VRRP router
				controlling the IPv4 or IPv6 address(es) associated with a virtual
				router is called the Active, and it forwards packets sent to these
				IPv4 or IPv6 addresses.  VRRP Active routers are configured with
				virtual IPv4 or IPv6 addresses, and VRRP Backup routers infer the
				address family of the virtual addresses being carried based on the
				transport protocol.  Within a VRRP router, the virtual routers in
				each of the IPv4 and IPv6 address families are a domain unto
				themselves and do not overlap.  The election process provides dynamic
				failover in the forwarding responsibility should the Active become
				unavailable.  For IPv4, the advantage gained from using VRRP is a
				higher-availability default path without requiring configuration of
				dynamic routing or router discovery protocols on every end-host.  For
				IPv6, the advantage gained from using VRRP for IPv6 is a quicker
				switchover to Backup routers than can be obtained with standard IPv6
				Neighbor Discovery mechanisms.</t>
			</abstract>
				
				<note title="Requirements Language">
				<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
			</note>
				
			</front>
				<seriesInfo name="RFC" value="5798" />
			</reference>
				<reference anchor="ISO.10038.1993">
				<front>
				<title>Information technology - Telecommunications and information exchange between systems - Local area networks - Media access control (MAC) bridges</title>
				<author>
				<organization>International Organization for Standardization</organization>
			</author>
				<date year="1993"/>
			</front>
				<seriesInfo name="ISO" value="Standard 10038"/>
			</reference>
			<reference anchor="RFC2119">
				<front>
					<title>Key words for use in RFCs to Indicate Requirement Levels</title>
					<author initials="S." surname="Bradner" fullname="Scott Bradner">
						<organization>Harvard University</organization>
					</author>
					<date year="1997" />
				</front>
				</reference>
					<reference anchor="RFC2460">
						<front>
					<title>Internet Protocol, Version 6 (IPv6) Specification</title>
					<author initials="S." surname="Deering" fullname="Stephen E. Deering">
						<organization>Cisco</organization>
					</author>
						<author initials="R" surname="Hinden" fullname="Robert M. Hinden">
							<organization>Nokia</organization>					
					</author>	
						<date year="1998" />
					</front>
					</reference>
						<reference anchor="RFC3768">
						<front>
					<title>Virtual Router Redundancy Protocol</title>
						<author initials="R" surname="Hinden" fullname="Robert M. Hinden">
						<organization>Nokia</organization>					
					</author>
						<date year="2004" />
					</front>
					</reference>
			<reference anchor="RFC4291">
				<front>
					<title>IP Version 6 Addressing Architecture</title>
					<author initials="S." surname="Deering" fullname="Stephen E. Deering">
						<organization>Cisco</organization>
					</author>
					<author initials="R" surname="Hinden" fullname="Robert M. Hinden">
						<organization>Nokia</organization>					
					</author>	
					<date year="2006" />
				</front>
			</reference>
			<reference anchor="RFC4443">
				<front>
					<title>Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification</title>
					<author initials="S." surname="Deering" fullname="Stephen E. Deering">
						<organization>Cisco</organization>
					</author>
					<author initials="A" surname="Conta" fullname="Alex Conta">
						<organization>Transwitch</organization>					
					</author>
					<author initials="M" surname="Gupta" fullname="Mukesh Gupta">
						<organization> Tropos Networks</organization>					
					</author>	
					<date year="2006" />
				</front>
			</reference>
			<reference anchor="RFC4861">
				<front>
					<title>Neighbor Discovery for IP version 6</title>
					<author initials="T." surname="Narten" fullname="Thomas Narten">
						<organization>IBM</organization>
					</author>
					<author initials="E" surname="Nordmark" fullname="Erik Nordmark">
						<organization>Sun Microsystems</organization>					
					</author>
					<author initials="M" surname="Simpson" fullname="William Allen Simpson">
						<organization> Daydreamer</organization>					
					</author>
					<author initials="H" surname="Soliman" fullname="Hesham Soliman">
						<organization> Elevate Technologies</organization>					
					</author>	
					<date year="2007" />
				</front>
			</reference>
		</references>
				<references>
				<name>Informative References</name>
				<reference anchor="VRRP-IPv6">
				<front>
				<title>Virtual Router Redundancy Protocol for IPv6</title>
				<author initials="R." surname="Hinden" fullname="R. Hinden">
			</author>
				<author initials="J." surname="Cruz" fullname="J. Cruz">
			</author>
				<date month="March" year="2007"/>
			</front>
				<seriesInfo name="Work" value="in Progress"/>
			</reference>
				<reference anchor="IPSTB">
				<front>
				<title>Development of Router Clusters to Provide Fast Failover in IP Networks",
				Digital Technical Journal, Volume 9 Number 3
			</title>
				<author>
				<organization>Higginson, P. and M. Shand</organization>
			</author>
				<date year="1997"/>
			</front>
			</reference>
				<reference anchor="IPX">
				<front>
				<title>IPX Router Specification Version 1.10</title>
				<author>
				<organization>Novell Incorporated</organization>
			</author>
				<date month="October" year="1992"/>
			</front>
			</reference>
			
			<reference anchor="RFC1071">
				<front>
					<title>Computing the Internet Checksum</title>
					<author initials="R." surname="Braden" fullname="R.Braden">
						<organization>ISI</organization>
						</author>
					<author initials="D." surname="Borman" fullname="D.Borman">
						<organization>Cray Research</organization>
						</author>
					<author initials="C." surname="Partridge" fullname="C.Partridge">
						<organization>BBN Laboratories</organization>
					</author>
					<date month="September" year="1988"/>
				</front>
			</reference>
			<reference anchor="RFC2328">
				<front>
					<title>OSPF Version 2</title>
					<author initials="J." surname="Moy" fullname="John Moy">
						<organization>Ascend Communications, Inc.</organization>
					</author>
					<date month="April" year="1998"/>
				</front>
			</reference>	
			<reference anchor="RFC1256">
				<front>
					<title>ICMP Router Discovery Messages</title>
					<author initials="S." surname="Deering" fullname="Stephen E. Deering">
						<organization>Xerox PARC</organization>
					</author>
					<date month="September" year="1991"/>
				</front>
			</reference>	
			<reference anchor="RFC1469">
				<front>
					<title>IP Multicast over Token-Ring Local Area Networks</title>
					<author initials="T." surname="Pusateri" fullname="Thomas J. Pusateri">
						<organization>Consultant</organization>
					</author>
					<date month="June" year="1993"/>
				</front>
			</reference>					
			<reference anchor="RFC2131">
				<front>
					<title>Dynamic Host Configuration Protocol</title>
					<author initials="T." surname="Droms" fullname="Ralph Droms">
						<organization>Bucknell University</organization>
					</author>
					<date month="March" year="1997"/>
				</front>
			</reference>				
			<reference anchor="RFC2281">
				<front>
					<title>Cisco Hot Standby Router Protocol (HSRP)</title>
					<author initials="T." surname="Li" fullname="Toni Li">
						<organization>Juniper Networks</organization>
					</author>
					<author initials="B." surname="Cole" fullname="Bruce Cole">
						<organization>Juniper Networks</organization>
					</author>
					<author initials="P." surname="Morton" fullname="Phil Morton">
						<organization>Cisco Systems</organization>
					</author>
					<author initials="D." surname="Lo" fullname="Dawn LI">
						<organization>Cisco Systems</organization>
					</author>
					<date month="March" year="1998"/>
				</front>
			</reference>					 
			<reference anchor="RFC2338">
				<front>
					<title>Virtual Router Redundancy Protocol</title>
					<author initials="S." surname="Knight" fullname="S. Knight">
						<organization>BAscend Communications</organization>
					</author>
					<author initials="D." surname="Weaver" fullname="D. Weaver">
						<organization>Ascend Communications</organization>
					</author>
					<author initials="D." surname="Whipple" fullname="D. Whipple">
						<organization>Microsoft</organization>
					</author>
					<author initials="R." surname="Hinden" fullname="R. Hinden">
						<organization>Nokia</organization>
					</author>
					<author initials="D." surname="Mitzel" fullname="D. Mitzel">
						<organization>Nokia</organization>
					</author>
					<author initials="P." surname="Hunt" fullname="P. Hunt">
						<organization>Nokia</organization>
					</author>
					<author initials="P." surname="Higginson" fullname="P. Higginson">
						<organization>Digital Equipment Corp</organization>
					</author>
					<author initials="M." surname="Shand" fullname="M. Shand">
						<organization>Digital Equipment Corp</organization>
					</author>
					<author initials="A." surname="Lindem" fullname="A. Lindem">
						<organization>IBM Corporation</organization>
					</author>
					<author initials="G." surname="Malkin" fullname="Gary Scott Malkin">
						<organization>Bay Networks</organization>
					</author>
					<date month="April" year="1998"/>
				</front>
			</reference>	
			<reference anchor="RFC2453">
				<front>
					<title>RIP Version 2</title>
					<author initials="G." surname="Malkin" fullname="Gary Scott Malkin">
						<organization>Bay Networks</organization>
					</author>
					<date month="November" year="1998"/>
				</front>
			</reference>
			<reference anchor="RFC2464">
				<front>
					<title>Transmission of IPv6 Packets over Ethernet Networks</title>
					<author initials="M." surname="Crawford" fullname="Matt Crawford">
						<organization>Fermilab</organization>
					</author>
					<date month="December" year="1998"/>
				</front>
			</reference>	
			<reference anchor="RFC3971">
				<front>
					<title>SEcure Neighbor Discovery (SEND)</title>
					<author initials="J." surname="Arkko" fullname="J. Arkko">
						<organization>Ericsson</organization>
					</author>
					<author initials="J." surname="Kempf" fullname="J. Kempf">
						<organization>DoCoMo Communications Labs USA</organization>
					</author>
					<author initials="B." surname="Zill" fullname="B. Zill">
						<organization>Microsoft</organization>
					</author>
					<author initials="P." surname="Nikander" fullname="P. Nikander">
						<organization>Ericsson</organization>
					</author>
					<date month="March" year="2005"/>
				</front>
			</reference>					

				<reference anchor="TKARCH">
				<front>
				<title>IBM Token-Ring Network, Architecture Specification, Publication SC30-3374-02, Third Edition</title>
				<author>
				<organization>IBM Incorporated</organization>
			</author>
				<date month="September" year="1989"/>
			</front>
			</reference>
			</references>

				<section anchor="sect-a">
				<name>Operation over FDDI, Token Ring, and ATM LANE</name>
				<section anchor="sect-a.1">
				<name>Operation over FDDI</name>
				<t>
				FDDI interfaces remove from the FDDI ring frames that have a source
				MAC address matching the device's hardware address.  Under some
				conditions, such as router isolations, ring failures, protocol
				transitions, etc., VRRP may cause there to be more than one Active
				router.  If a Active router installs the virtual router MAC address
				as the hardware address on a FDDI device, then other Actives'
				ADVERTISEMENTS will be removed from the ring during the Active
				convergence, and convergence will fail.</t>
				<t>
				To avoid this, an implementation SHOULD configure the virtual router
				MAC address by adding a unicast MAC filter in the FDDI device, rather
				than changing its hardware MAC address.  This will prevent a Active
				router from removing any ADVERTISEMENTS it did not originate.</t>
			</section>
				<section anchor="sect-a.2">
				<name>Operation over Token Ring</name>
				<t>
				Token Ring has several characteristics that make running VRRP
				difficult.  These include the following:</t>
				<ul spacing="normal">
				<li>In order to switch to a new Active located on a different bridge
				Token-Ring segment from the previous Active when using source-
				route bridges, a mechanism is required to update cached source-
				route information.</li>
				<li>No general multicast mechanism is supported across old and new
				Token-Ring adapter implementations.  While many newer Token-Ring
				adapters support group addresses, Token-Ring functional-address
				support is the only generally available multicast mechanism.  Due
				to the limited number of Token-Ring functional addresses, these
				may collide with other usage of the same Token-Ring functional
				addresses.</li>
			</ul>
				<t>
				Due to these difficulties, the preferred mode of operation over Token
				Ring will be to use a Token-Ring functional address for the VRID
				virtual MAC address.  Token-Ring functional addresses have the two
				high-order bits in the first MAC address octet set to B'1'.  They
				range from 03-00-00-00-00-80 to 03-00-02-00-00-00 (canonical format).
				However, unlike multicast addresses, there is only one unique
				functional address per bit position.  The functional addresses
				03-00-00-10-00-00 through 03-00-02-00-00-00 are reserved by the
				Token-Ring Architecture <xref target="TKARCH"/> for user-defined applications.
				However, since there are only 12 user-defined Token-Ring functional
				addresses, there may be other non-IPvX protocols using the same
				functional address.  Since the Novell IPX <xref target="IPX"/> protocol uses the
				03-00-00-10-00-00 functional address, operation of VRRP over Token
				Ring will avoid use of this functional address.  In general, Token-
				Ring VRRP users will be responsible for resolution of other user-
				defined Token-Ring functional address conflicts.</t>
				<t>
				VRIDs are mapped directly to Token-Ring functional addresses.  In
				order to decrease the likelihood of functional-address conflicts,
				allocation will begin with the largest functional address.  Most non-
				IPvX protocols use the first or first couple user-defined functional
				addresses, and it is expected that VRRP users will choose VRIDs
				sequentially, starting with 1.</t>
				<artwork><![CDATA[
				VRID      Token-Ring Functional Address
				----      -----------------------------
				1             03-00-02-00-00-00
				2             03-00-04-00-00-00
				3             03-00-08-00-00-00
				4             03-00-10-00-00-00
				5             03-00-20-00-00-00
				6             03-00-40-00-00-00
				7             03-00-80-00-00-00
				8             03-00-00-01-00-00
				9             03-00-00-02-00-00
				10             03-00-00-04-00-00
				11             03-00-00-08-00-00
				]]></artwork>
				<t>
				Or, more succinctly, octets 3 and 4 of the functional address are
				equal to (0x4000 >> (VRID - 1)) in non-canonical format.</t>
				<t>
				Since a functional address cannot be used as a MAC-level source
				address, the real MAC address is used as the MAC source address in
				VRRP advertisements.  This is not a problem for bridges, since
				packets addressed to functional addresses will be sent on the
				spanning-tree explorer path <xref target="ISO.10038.1993"/>.</t>
				<t>
				The functional-address mode of operation MUST be implemented by
				routers supporting VRRP on Token Ring.</t>
				<t>
				Additionally, routers MAY support the unicast mode of operation to
				take advantage of newer Token-Ring adapter implementations that
				support non-promiscuous reception for multiple unicast MAC addresses
				and to avoid both the multicast traffic and usage conflicts
				associated with the use of Token-Ring functional addresses.  Unicast
				mode uses the same mapping of VRIDs to virtual MAC addresses as
				Ethernet.  However, one important difference exists.  ND
				request/reply packets contain the virtual MAC address as the source
				MAC address.  The reason for this is that some Token-Ring driver
				implementations keep a cache of MAC address/source-routing
				information independent of the ND cache.</t>
				<t>
				Hence, these implementations have to receive a packet with the
				virtual MAC address as the source address in order to transmit to
				that MAC address in a source-route-bridged network.</t>
				<t>
				Unicast mode on Token Ring has one limitation that should be
				considered.  If there are VRID routers on different source-route-
				bridge segments, and there are host implementations that keep their
				source-route information in the ND cache and do not listen to
				gratuitous NDs, these hosts will not update their ND source-route
				information correctly when a switchover occurs.  The only possible
				solution is to put all routers with the same VRID on the same source-
				route-bridge segment and use techniques to prevent that bridge
				segment from being a single point of failure.  These techniques are
				beyond the scope of this document.</t>
				<t>
				For both the multicast and unicast mode of operation, VRRP
				advertisements sent to 224.0.0.18 should be encapsulated as described
				in <xref target="RFC1469"/>.</t>
			</section>
				<section anchor="sect-a.3">
				<name>Operation over ATM LANE</name>
				<t>
				Operation of VRRP over ATM LANE on routers with ATM LANE interfaces
				and/or routers behind proxy LAN Emulation Clients (LECs) are beyond
				the scope of this document.</t>
			</section>
			</section>
			</back>
			</rfc>
